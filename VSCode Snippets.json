{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Snippet Template": {
		"scope": "",
		"prefix": "ntemp",
		"body": [
			"\"${1:name}\": {",
			"\t\"scope\": \"\",",
			"\t\"prefix\": \"${2:prefix}\",",
			"\t\"body\": [",
			"\t\t",
			"\t],",
			"\t\"description\": \"${3:description}\"",
			"},"
		],
		"description": "Adding a new code snippet template"
	},

	"Axios Post": {
		"scope": "",
		"prefix": "apost",
		"body": [
			"axios.post('${1:url}', ${2:object})",
			"\t.then((res) => {",
			"})",
			".catch((error) => {",
			"\tthis.error = error;",
			"});"
		],
		"description": "Stub out an axios post"
	},

	"Axios Get": {
		"scope": "",
		"prefix": "aget",
		"body": [
			"this.isLoading = true;",
			"",
			"axios.get('${1:url}')",
			"\t.then((res) => {",
			"\t\t",
			"\t\tthis.isLoading = false;",
			"})",
			".catch((error) => {",
			"\tthis.error = error;",
			"\tthis.isLoading = false;",
			"});"
		],
		"description": "Stub out an axios post"
	},

	"Vue Script": {
		"scope": "",
		"prefix": "vue",
		"body": [
			"import Vue from \"vue\";",
			"",
			"let v = new Vue({",
			"\tel: \"#\",",
			"\tdata: {",
			"\t\terror: \"\",",
			"\t\tisLoading: false,",
			"\t\tisSaving: false,",
			"\t},",
			"\tmounted() {",
			"\t\t",
			"\t},",
			"\tcomponents: {",
			"\t}",
			"});"
		],
		"description": "Stub out a Vue script"
	},

	"Vue Component": {
		"scope": "",
		"prefix": "vuec",
		"body": [
			"<template>",
			"\t<div>",
			"\t",
			"\t</div>",
			"</template>",
			"<script>",
			"\timport Vue from \"vue\";",
			"\timport axios from \"axios\";",
			"\timport _ from \"lodash\";",
			"",
			"\texport default Vue.extend({",
			"\t\tprops: {",
			"\t\t},",
			"\t\tdata() {",
			"\t\t\treturn {",
			"\t\t\t}",
			"\t\t},",
			"\t\tmounted() {",
			"\t\t},",
			"\t\tmethods: {",
			"\t\t},",
			"\t});",
			"</script>"
		],
		"description": "Stub out a Vue component"
	},

	"Vue Message Blocks": {
		"scope": "",
		"prefix": "vmsg",
		"body": [
			"<div v-show=\"isLoading\" class=\"alert alert-primary\" v-cloak>",
			"\t<i class=\"far fa-spinner fa-spin\"></i> Loading...",
			"</div>",
			"<div v-show=\"error\" class=\"alert alert-danger\" v-cloak>{{ error }}</div>"
		],
		"description": "Insert saving/loading and error alerts"
	},

	"Vue Bootstrap Table": {
		"scope": "",
		"prefix": "vtbl",
		"body": [
			"<table class=\"table table-striped\">",
			"\t<thead>",
			"\t\t<tr>",
			"\t\t\t<th></th>",
			"\t\t</tr>",
			"\t</thead>",
			"\t<tr v-for=\"${1:item} in ${2:collection}\">",
			"\t\t<td></td>",
			"\t</tr>",
			"</table>"
		],
		"description": "Bootstrap table for Vue"
	},

	"BS Form Row": {
		"scope": "",
		"prefix": "bsrow",
		"body": [
			"<div class=\"form-row\">",
			"\t<div class=\"col\">",
			"\t\t<label></label>",
			"\t\t",
			"\t</div>",
			"\t<div class=\"col\">",
			"\t\t<label></label>",
			"\t\t",
			"\t</div>",
			"</div>",
		],
		"description": "Insert a boostrap form row"
	},

	"BS Card": {
		"scope": "",
		"prefix": "bscard",
		"body": [
			"<div class=\"card\" style=\"width: 18rem;\">",
			"\t<div class=\"card-body\">",
			"\t\t<h5 class=\"card-title\">Card title</h5>",
			"\t\t<h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>",
			"\t\t<p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>",
			"\t\t<a href=\"#\" class=\"card-link\">Card link</a>",
			"\t\t<a href=\"#\" class=\"card-link\">Another link</a>",
			"\t</div>",
			"</div>"
		],
		"description": "Insert a bootstrap card"
	},

	"ASP Field Validation": {
		"scope": "",
		"prefix": "asp-validation-field",
		"body": [
			"<span asp-validation-for=\"\" class=\"text-danger\"></span>"
		],
		"description": "Insert validation tag"
	},

	"ASP Validation Summary": {
		"scope": "",
		"prefix": "asp-validation-summary",
		"body": [
			"<div asp-validation-summary=\"ModelOnly\" style=\"color: red;\"></div>"
		],
		"description": "Insert validation summary"
	}
}
